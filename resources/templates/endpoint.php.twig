<?php

declare(strict_types=1);

/*
 * This file is part of boo/bnet.
 *
 * (c) Jonas Stendahl <jonas@stendahl.me>
*
* This source file is subject to the MIT license that is bundled
* with this source code in the file LICENSE.
*/

namespace {{ namespace }};

use Boo\BattleNet\Endpoints\EndpointInterface;

/**
 * @internal
 */
final class {{ class_name }} implements EndpointInterface
{
    private const PATH = '{{ path }}';
{% if has_replace %}

    /**
     * @var string
     */
    private $path = self::PATH;
{% endif %}
{% if needs_constructor %}

    public function __construct({{ constructor_signature }})
    {
{% if has_replace %}
        $this->path = vsprintf($this->path, [
{% for parameter in replace %}
            ${{ parameter.name }},
{% endfor %}
        ]);
{% endif %}
    }
{% endif %}

    public function getMethod(): string
    {
        return self::METHOD_{{ method }};
    }

    public function getPath(): string
    {
{% if has_replace %}
        return $this->path;
{% else %}
        return self::PATH;
{% endif %}
    }
}
